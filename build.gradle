plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'kr.smartscore'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'
    implementation 'junit:junit:4.12'// querydsl
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	compile('com.vladmihalcea:hibernate-types-52:2.9.13')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	compile 'org.hibernate:hibernate-core:5.4.0.Final'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.11.4'
}

// querydsl 적용
def querydslSrcDir = 'src/main/generated'
querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}


test {
	useJUnitPlatform()
}
